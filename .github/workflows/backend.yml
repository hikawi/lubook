name: Backend

on:
  push:
    paths:
      - "server/**"
  pull_request:
    paths:
      - "server/**"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vitest
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    name: Run backend tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            server/
          sparse-checkout-cone-mode: false

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: latest
          cache: pnpm
          cache-dependency-path: ./server/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ./server
        run: pnpm i

      - name: Build
        working-directory: ./server
        run: pnpm build

  build:
    needs: [test]
    runs-on: ubuntu-latest
    name: Build backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            server/
          sparse-checkout-cone-mode: false

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: pnpm
          cache-dependency-path: ./server/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: ./server
        run: pnpm i --frozen-lockfile

      - name: Build
        working-directory: ./server
        run: pnpm build

  docker:
    name: Build Docker image
    needs: [test, build]
    concurrency:
      group: backend-prod
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./server
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/hikawi/lubook:latest

  deploy:
    needs: [docker]
    name: Deploy Docker image
    concurrency:
      group: backend-prod
      cancel-in-progress: true
    environment:
      name: Backend Production
      url: https://api.lubook.luny.dev
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: SSH Deployment
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /srv
            docker compose up -d lubook-api
